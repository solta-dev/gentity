// DO NOT EDIT THIS FILE!
// It is autogenerated by gentity

package {{ .PackageName }}

import (
	"fmt"
	"strings"
	"context"
	"github.com/jackc/pgx/v5"
    "github.com/jackc/pgx/v5/pgconn"
    {{ range $import :=.Imports }}
    "{{ $import }}"
    {{ end }}
)

type InsertOption struct {
	ReturnAndUpdateVals bool
	OnConflictStatement string
}

type DBExecutor interface {
	Exec(ctx context.Context, sql string, arguments ...any) (commandTag pgconn.CommandTag, err error)
	Query(ctx context.Context, sql string, args ...any) (pgx.Rows, error)
	QueryRow(ctx context.Context, sql string, args ...any) pgx.Row
}

type DBExecutorKey string

func fromContext(ctx context.Context) DBExecutor {
    dbExecutorVal := ctx.Value(DBExecutorKey("dbExecutor"))
    if dbExecutorVal == nil {
        dbExecutorVal = ctx.Value("dbExecutor")
    }
    dbe, ok := dbExecutorVal.(DBExecutor)
    if !ok {
        panic("DBExecutor not found in context")
    }
    return dbe
}

{{ range $entity := .Entities }}
{{ $entity }}
{{ end }}
